{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/streams/StreamEdit.js\";\nimport { React, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: _.pick(this.props.stream, \"title\", \"description\") // initialValues is a Redux Form attribute this.props.stream consists of title and description which is passed\n        ,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/streams/StreamEdit.js"],"names":["React","Component","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","_","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AACA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAKjCM,QALiC,GAKrBC,UAAD,IAAgB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,KAPgC;AAAA;;AACjCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,aAAa,EAAEC,CAAC,CAACC,IAAF,CAAO,KAAKP,KAAL,CAAWK,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADjB,CAEE;AAFF;AAGE,QAAA,QAAQ,EAAE,KAAKV;AAHjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAvBgC;;AA0BnC,MAAMa,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA,SAAO;AAAEL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAHD;;AAKA,eAAeb,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACbE,UADa,CAAf","sourcesContent":["import { React, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\nclass StreamEdit extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = (formValues) => {\n    console.log(formValues);\n  };\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading....</div>;\n    }\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={_.pick(this.props.stream, \"title\", \"description\")}\n          // initialValues is a Redux Form attribute this.props.stream consists of title and description which is passed\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(\n  StreamEdit\n);\n"]},"metadata":{},"sourceType":"module"}