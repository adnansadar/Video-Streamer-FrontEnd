{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/GoogleAuth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [isSignedIn, setisSignedIn] = useState(null);\n\nconst GoogleAuth = () => {\n  _s();\n\n  useEffect(() => {\n    // GAPI is Google's client library for browser-side JavaScript. It's used in Google Sign-in, Google Drive\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        clientId: \"753149280389-6o5bi8ko4u8be2ohmehgcfin93jn4agj.apps.googleusercontent.com\",\n        // scope=user info taken by our app\n        scope: \"email\"\n      }).then(() => {\n        const auth = window.gapi.auth2.getAuthInstance();\n        setisSignedIn(this.auth.isSignedIn.get());\n      });\n    });\n  }, []);\n\n  const renderAuthButton = () => {\n    if (isSignedIn === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Dont know if we are signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else if (isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I am signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I am not signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderAuthButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GoogleAuth, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GoogleAuth;\nexport default GoogleAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"sources":["/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/GoogleAuth.js"],"names":["React","useState","useEffect","isSignedIn","setisSignedIn","GoogleAuth","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","get","renderAuthButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,IAAD,CAA5C;;AACA,MAAMI,UAAU,GAAG,MAAM;AAAA;;AACvBH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,0EAFE;AAGJ;AACAC,QAAAA,KAAK,EAAE;AAJH,OADR,EAOGC,IAPH,CAOQ,MAAM;AACV,cAAMC,IAAI,GAAGR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAb;AACAZ,QAAAA,aAAa,CAAC,KAAKU,IAAL,CAAUX,UAAV,CAAqBc,GAArB,EAAD,CAAb;AACD,OAVH;AAWD,KAZD;AAaD,GAfQ,EAeN,EAfM,CAAT;;AAgBA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAIf,UAAU,KAAK,IAAnB,EAAyB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAIA,UAAJ,EAAgB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GARD;;AASA,sBAAO;AAAA,cAAMe;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAMb,U;;KAAAA,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst [isSignedIn, setisSignedIn] = useState(null);\nconst GoogleAuth = () => {\n  useEffect(() => {\n    // GAPI is Google's client library for browser-side JavaScript. It's used in Google Sign-in, Google Drive\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"753149280389-6o5bi8ko4u8be2ohmehgcfin93jn4agj.apps.googleusercontent.com\",\n          // scope=user info taken by our app\n          scope: \"email\",\n        })\n        .then(() => {\n          const auth = window.gapi.auth2.getAuthInstance();\n          setisSignedIn(this.auth.isSignedIn.get());\n        });\n    });\n  }, []);\n  const renderAuthButton = () => {\n    if (isSignedIn === null) {\n      return <div>Dont know if we are signed in</div>;\n    } else if (isSignedIn) {\n      return <div>I am signed in</div>;\n    } else {\n      return <div>I am not signed in</div>;\n    }\n  };\n  return <div>{renderAuthButton}</div>;\n};\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}