{"ast":null,"code":"import _classCallCheck from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{React,Component}from\"react\";import{connect}from\"react-redux\";import{fetchStream,editStream}from\"../../actions\";import StreamForm from\"./StreamForm\";import _ from\"lodash\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StreamEdit=/*#__PURE__*/function(_Component){_inherits(StreamEdit,_Component);var _super=_createSuper(StreamEdit);function StreamEdit(){var _this;_classCallCheck(this,StreamEdit);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onSubmit=function(formValues){_this.props.editStream(_this.props.match.params.id,formValues);};return _this;}_createClass(StreamEdit,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchStream(this.props.match.params.id);}},{key:\"render\",value:function render(){if(!this.props.stream){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading....\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Edit a Stream\"}),/*#__PURE__*/_jsx(StreamForm,{initialValues:_.pick(this.props.stream,\"title\",\"description\")// initialValues is a Redux Form attribute this.props.stream consists of title and description which is passed\n,onSubmit:this.onSubmit})]});}}]);return StreamEdit;}(Component);var mapStateToProps=function mapStateToProps(state,ownProps){// console.log(ownProps);\nreturn{stream:state.streams[ownProps.match.params.id]};};export default connect(mapStateToProps,{fetchStream:fetchStream,editStream:editStream})(StreamEdit);","map":{"version":3,"sources":["/home/adnan/Documents/Video-Streaming-App/client/src/components/streams/StreamEdit.js"],"names":["React","Component","connect","fetchStream","editStream","StreamForm","_","StreamEdit","onSubmit","formValues","props","match","params","id","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":"4oBAAA,OAASA,KAAT,CAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,eAAxC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,C,2FACMC,CAAAA,U,2UAKJC,Q,CAAW,SAACC,UAAD,CAAgB,CACzB,MAAKC,KAAL,CAAWN,UAAX,CAAsB,MAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,CAAkDJ,UAAlD,EACD,C,uEAND,4BAAoB,CAClB,KAAKC,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,EACD,C,sBAMD,iBAAS,CACP,GAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,CAAwB,CACtB,mBAAO,oCAAP,CACD,CACD,mBACE,oCACE,qCADF,cAEE,KAAC,UAAD,EACE,aAAa,CAAER,CAAC,CAACS,IAAF,CAAO,KAAKL,KAAL,CAAWI,MAAlB,CAA0B,OAA1B,CAAmC,aAAnC,CACf;AAFF,CAGE,QAAQ,CAAE,KAAKN,QAHjB,EAFF,GADF,CAUD,C,wBAvBsBP,S,EA0BzB,GAAMe,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C;AACA,MAAO,CAAEJ,MAAM,CAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC,CAAV,CAAP,CACD,CAHD,CAKA,cAAeX,CAAAA,OAAO,CAACc,eAAD,CAAkB,CAAEb,WAAW,CAAXA,WAAF,CAAeC,UAAU,CAAVA,UAAf,CAAlB,CAAP,CACbG,UADa,CAAf","sourcesContent":["import { React, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\nimport _ from \"lodash\";\nclass StreamEdit extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = (formValues) => {\n    this.props.editStream(this.props.match.params.id, formValues);\n  };\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading....</div>;\n    }\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm\n          initialValues={_.pick(this.props.stream, \"title\", \"description\")}\n          // initialValues is a Redux Form attribute this.props.stream consists of title and description which is passed\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(\n  StreamEdit\n);\n"]},"metadata":{},"sourceType":"module"}