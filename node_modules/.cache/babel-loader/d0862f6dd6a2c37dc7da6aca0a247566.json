{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/streams/StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamCreate extends React.Component {\n  renderInput({\n    input,\n    label,\n    meta\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), meta.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // handleSubmit is a method of redux form\n      _jsxDEV(\"form\", {\n        className: \"ui form\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          component: this.renderInput,\n          label: \"Enter Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderInput,\n          label: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {}; // return empty errors object if no errors else return key value pair\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate\n})(StreamCreate); // reduxForm acts like connect over here, where the form is passed as props to StreamCreate","map":{"version":3,"sources":["/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","meta","error","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAD,EAAyB;AAClC,wBACE;AAAA,8BACE;AAAA,kBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,sBAGMD;AAHN;AAAA;AAAA;AAAA;AAAA,cAFF,EAOGE,IAAI,CAACC,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AACDC,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAFZ;AAAA,gCAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAE,KAAKL,WAApC;AAAiD,UAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,SAAS,EAAE,KAAKA,WAFlB;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAeD;;AAjCwC;;AAoC3C,MAAMY,QAAQ,GAAIN,UAAD,IAAgB;AAC/B,QAAMO,MAAM,GAAG,EAAf,CAD+B,CAE/B;;AACA,MAAI,CAACP,UAAU,CAACQ,KAAhB,EAAuB;AACrBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAI,CAACR,UAAU,CAACS,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AACD,SAAOF,MAAP;AACD,CAVD;;AAYA,eAAehB,SAAS,CAAC;AAAEmB,EAAAA,IAAI,EAAE,cAAR;AAAwBJ,EAAAA;AAAxB,CAAD,CAAT,CAA8Cd,YAA9C,CAAf,C,CACA","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  renderInput({ input, label, meta }) {\n    return (\n      <div>\n        <label>{label}</label>\n        <input\n          // onChange={formProps.input.onChange}\n          // value={formProps.input.value}\n          {...input}\n        />\n        {meta.error}\n      </div>\n    );\n  }\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n  render() {\n    return (\n      // handleSubmit is a method of redux form\n      <form\n        className=\"ui form\"\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Text\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n  // return empty errors object if no errors else return key value pair\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n  return errors;\n};\n\nexport default reduxForm({ form: \"streamCreate\", validate })(StreamCreate);\n// reduxForm acts like connect over here, where the form is passed as props to StreamCreate\n"]},"metadata":{},"sourceType":"module"}