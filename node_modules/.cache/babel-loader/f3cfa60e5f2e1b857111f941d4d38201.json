{"ast":null,"code":"var _jsxFileName = \"/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/streams/StreamShow.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamShow extends React.Component {\n  showStream() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [title, description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.showStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    id\n  } = ownProps.match.params;\n  return {\n    stream: state.streams[id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/adnan/Documents/ReactJS-MiniProjects/Udemy-Course/streams/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","showStream","props","stream","title","description","componentDidMount","match","params","id","render","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,UAAU,GAAG;AACX,QAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKH,KAAL,CAAWC,MAA1C;AACA,wBACE;AAAA,iBACGC,KADH,EAEGC,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBAAM,KAAKT;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAnBsC;;AAsBzC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAM;AAAEJ,IAAAA;AAAF,MAASI,QAAQ,CAACN,KAAT,CAAeC,MAA9B;AACA,SAAO;AAAEL,IAAAA,MAAM,EAAES,KAAK,CAACE,OAAN,CAAcL,EAAd;AAAV,GAAP;AACD,CAHD;;AAKA,eAAeZ,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamShow extends React.Component {\n  showStream() {\n    if (!this.props.stream) {\n      return <div>Loading</div>;\n    }\n    const { title, description } = this.props.stream;\n    return (\n      <div>\n        {title}\n        {description}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  render() {\n    return <div>{this.showStream}</div>;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { id } = ownProps.match.params;\n  return { stream: state.streams[id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n"]},"metadata":{},"sourceType":"module"}