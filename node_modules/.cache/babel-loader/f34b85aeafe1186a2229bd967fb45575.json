{"ast":null,"code":"import _objectSpread from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/adnan/Documents/Video-Streaming-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Field,reduxForm}from\"redux-form\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StreamForm=/*#__PURE__*/function(_React$Component){_inherits(StreamForm,_React$Component);var _super=_createSuper(StreamForm);function StreamForm(){var _this;_classCallCheck(this,StreamForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderInput=function(_ref){var input=_ref.input,label=_ref.label,meta=_ref.meta;var className=\"field \".concat(meta.error&&meta.touched?\"error\":null);return/*#__PURE__*/_jsxs(\"div\",{className:className,children:[/*#__PURE__*/_jsx(\"label\",{children:label}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},input),{},{autoComplete:\"off\"})),_this.renderError(meta)]});};_this.onSubmit=function(formValues){_this.props.onSubmit(formValues);};return _this;}_createClass(StreamForm,[{key:\"renderError\",value:function renderError(_ref2){var error=_ref2.error,touched=_ref2.touched;if(touched&&error){return/*#__PURE__*/_jsx(\"div\",{className:\"ui error message\",children:/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:error})});}}},{key:\"render\",value:function render(){return/*#__PURE__*/ (// handleSubmit is a method of redux form\n_jsxs(\"form\",{className:\"ui form error\",onSubmit:this.props.handleSubmit(this.onSubmit),children:[/*#__PURE__*/_jsx(Field,{name:\"title\",component:this.renderInput,label:\"Enter Text\"}),/*#__PURE__*/_jsx(Field,{name:\"description\",component:this.renderInput,label:\"Enter Description\"}),/*#__PURE__*/_jsx(\"button\",{className:\"ui button primary\",children:\"Submit\"})]}));}}]);return StreamForm;}(React.Component);var validate=function validate(formValues){var errors={};// return empty errors object if no errors else return key value pair\nif(!formValues.title){errors.title=\"You must enter a title\";}if(!formValues.description){errors.description=\"You must enter a description\";}return errors;};export default reduxForm({form:\"streamForm\",validate:validate})(StreamForm);","map":{"version":3,"sources":["/home/adnan/Documents/Video-Streaming-App/client/src/components/streams/StreamForm.js"],"names":["React","Field","reduxForm","StreamForm","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","handleSubmit","Component","validate","errors","title","description","form"],"mappings":"kzBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,C,2FAEMC,CAAAA,U,uVAUJC,W,CAAc,cAA4B,IAAzBC,CAAAA,KAAyB,MAAzBA,KAAyB,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,IAAW,MAAXA,IAAW,CACxC,GAAMC,CAAAA,SAAS,iBAAYD,IAAI,CAACE,KAAL,EAAcF,IAAI,CAACG,OAAnB,CAA6B,OAA7B,CAAuC,IAAnD,CAAf,CACA,mBACE,aAAK,SAAS,CAAEF,SAAhB,wBACE,uBAAQF,KAAR,EADF,cAEE,4CAGMD,KAHN,MAIE,YAAY,CAAC,KAJf,GAFF,CAQG,MAAKM,WAAL,CAAiBJ,IAAjB,CARH,GADF,CAYD,C,OACDK,Q,CAAW,SAACC,UAAD,CAAgB,CACzB,MAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB,EACD,C,iEA1BD,2BAAgC,IAAlBJ,CAAAA,KAAkB,OAAlBA,KAAkB,CAAXC,OAAW,OAAXA,OAAW,CAC9B,GAAIA,OAAO,EAAID,KAAf,CAAsB,CACpB,mBACE,YAAK,SAAS,CAAC,kBAAf,uBACE,YAAK,SAAS,CAAC,QAAf,UAAyBA,KAAzB,EADF,EADF,CAKD,CACF,C,sBAmBD,iBAAS,CACP,oBACE;AACA,cACE,SAAS,CAAC,eADZ,CAEE,QAAQ,CAAE,KAAKK,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CAFZ,wBAIE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAE,KAAKR,WAApC,CAAiD,KAAK,CAAC,YAAvD,EAJF,cAKE,KAAC,KAAD,EACE,IAAI,CAAC,aADP,CAEE,SAAS,CAAE,KAAKA,WAFlB,CAGE,KAAK,CAAC,mBAHR,EALF,cAUE,eAAQ,SAAS,CAAC,mBAAlB,oBAVF,GAFF,EAeD,C,wBA5CsBJ,KAAK,CAACgB,S,EA+C/B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACJ,UAAD,CAAgB,CAC/B,GAAMK,CAAAA,MAAM,CAAG,EAAf,CACA;AACA,GAAI,CAACL,UAAU,CAACM,KAAhB,CAAuB,CACrBD,MAAM,CAACC,KAAP,CAAe,wBAAf,CACD,CACD,GAAI,CAACN,UAAU,CAACO,WAAhB,CAA6B,CAC3BF,MAAM,CAACE,WAAP,CAAqB,8BAArB,CACD,CACD,MAAOF,CAAAA,MAAP,CACD,CAVD,CAYA,cAAehB,CAAAA,SAAS,CAAC,CAAEmB,IAAI,CAAE,YAAR,CAAsBJ,QAAQ,CAARA,QAAtB,CAAD,CAAT,CAA4Cd,UAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamForm extends React.Component {\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n  renderInput = ({ input, label, meta }) => {\n    const className = `field ${meta.error && meta.touched ? \"error\" : null}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input\n          // onChange={formProps.input.onChange}\n          // value={formProps.input.value}\n          {...input}\n          autoComplete=\"off\"\n        />\n        {this.renderError(meta)}\n      </div>\n    );\n  };\n  onSubmit = (formValues) => {\n    this.props.onSubmit(formValues);\n  };\n  render() {\n    return (\n      // handleSubmit is a method of redux form\n      <form\n        className=\"ui form error\"\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Text\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui button primary\">Submit</button>\n      </form>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n  // return empty errors object if no errors else return key value pair\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n  return errors;\n};\n\nexport default reduxForm({ form: \"streamForm\", validate })(StreamForm);\n"]},"metadata":{},"sourceType":"module"}